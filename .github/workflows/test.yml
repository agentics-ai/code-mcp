name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: List files in repo root (diagnostic)
      run: ls -lah

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install pnpm
      run: npm install -g pnpm@10.10.0

    - name: Verify pnpm installation
      run: pnpm --version

    - name: Install dependencies (with lockfile)
      run: pnpm install --frozen-lockfile

    - name: Setup Python for tests
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pytest and Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install pytest pytest-cov

    - name: Run TypeScript build
      run: pnpm run build

    - name: Run linting (if configured)
      run: pnpm run lint || echo "No lint script configured"
      continue-on-error: true

    - name: Run unit tests
      run: pnpm run test:unit

    - name: Run integration tests
      run: pnpm run test:integration

    - name: Run end-to-end tests
      run: pnpm run test:e2e

    - name: Run server tests
      run: pnpm run test:server

    - name: Run full test suite with coverage
      run: pnpm run test:ci

    - name: Run Python tests (if any)
      run: |
        if [ -f "demo/python_execution_test.py" ]; then
          echo "Running Python execution test..."
          python3 demo/python_execution_test.py
        fi
        if [ -d "tests" ] && find tests -name "*.py" -type f | grep -q .; then
          echo "Running pytest..."
          python3 -m pytest tests/ -v
        else
          echo "No Python test files found"
        fi
      continue-on-error: true

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage/lcov.info
      continue-on-error: true

  test-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: List files in repo root (diagnostic)
      run: ls -lah

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install pnpm
      run: npm install -g pnpm@8

    - name: Verify pnpm installation
      run: pnpm --version

    - name: Install dependencies (with lockfile)
      run: pnpm install --frozen-lockfile

    - name: Run build
      run: pnpm run build

    - name: Run cross-platform tests
      run: pnpm run test:ci

  performance:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: List files in repo root (diagnostic)
      run: ls -lah

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install pnpm
      run: npm install -g pnpm@8

    - name: Verify pnpm installation
      run: pnpm --version

    - name: Install dependencies (with lockfile)
      run: pnpm install --frozen-lockfile

    - name: Run build
      run: pnpm run build

    - name: Run performance tests
      run: |
        /usr/bin/time -v pnpm run test:ci 2>&1 | tee performance.log

    - name: Check memory usage
      run: |
        echo "Memory usage information:"
        grep "Maximum resident set size" performance.log || echo "Memory info not available"

    - name: Archive performance logs
      uses: actions/upload-artifact@v3
      with:
        name: performance-logs
        path: performance.log
